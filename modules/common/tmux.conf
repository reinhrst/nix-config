# Vi keys in copy mode
set-window-option -g mode-keys vi

# Disable all default mouse mappings (add these unbind commands)
# Root table (pane selection, dragging, scrolling)
set-option -g mouse on
#unbind -T root MouseDown1Pane
#unbind -T root MouseDrag1Pane
unbind -T root MouseDragEnd1Pane
#unbind -T root MouseDrag1Border
#unbind -T root WheelUpPane
#unbind -T root WheelDownPane
unbind -T root DoubleClick1Pane
bind -T root SecondClick1Pane select-pane\; copy-mode -e\; send-keys -X select-word
unbind -T root TripleClick1Pane
bind -T root TripleClick1Pane select-pane\; copy-mode -e\; send-keys -X select-line
#unbind -T copy-mode-vi MouseDown1Pane
#unbind -T copy-mode-vi MouseDrag1Pane
unbind -T copy-mode-vi MouseDragEnd1Pane  # disables auto copy
#unbind -T copy-mode-vi MouseDrag1Border
#unbind -T copy-mode-vi WheelUpPane
#unbind -T copy-mode-vi WheelDownPane
unbind -T copy-mode-vi DoubleClick1Pane
bind -T copy-mode-vi SecondClick1Pane select-pane\; copy-mode -e\; send-keys -X select-word
unbind -T copy-mode-vi TripleClick1Pane
bind -T copy-mode-vi TripleClick1Pane select-pane\; copy-mode -e\; send-keys -X select-line


# Enable RGB color support
set-option -ga terminal-overrides ",*256col*:Tc"

# Allow cursor shape changes (Ss = set cursor style, Se = reset cursor style)
set-option -ga terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

# Status bar at top with Snazzy theme colors
set-option -g status-position top
set-option -g status-style "bg=#282a36,fg=#ff6ac1"
set-option -g status-left ""
set-option -g status-right ""
set-option -g window-status-format " #I:#W "
set-option -g window-status-current-format " #I:#W "
set-option -g window-status-current-style "bg=#282a36,fg=#5af78e,bold"
set-option -g pane-border-style "fg=#57c7ff"
set-option -g pane-active-border-style "fg=#5af78e"

# Cursor in copy mode (reverse video block)
set-option -g mode-style "bg=#53b1ff,fg=#15161C"
set-hook -g after-copy-mode 'set -p cursor-style blinking-underline'

# esc clears selection, exits copy mode if no selection
bind-key -T copy-mode-vi Escape \
  if-shell -F '#{selection_present}' \
    'send-keys -X clear-selection' \
    'send-keys -X cancel'

# v: Start character-wise (stream) selection; toggle off rectangle if active
unbind -T copy-mode-vi v
bind-key -T copy-mode-vi v \
  if-shell -F '#{rectangle_toggle}' \
    'send-keys -X rectangle-toggle' \
    'true' \; \
  send-keys -X begin-selection

# C-v: Start block (rectangle) selection; toggle on if not active
bind-key -T copy-mode-vi C-v \
  if-shell -F '#{rectangle_toggle}' \
    'true' \
    'send-keys -X rectangle-toggle' \; \
  send-keys -X begin-selection

# y: Yank selection to clipboard (via tmux-yank plugin) without exiting copy-mode
bind-key -T copy-mode-vi y \
  send-keys -X copy-pipe-and-cancel "tmux-yank"

# M-c (Alt-C): Copy selection and exit (same as tmux-yank Enter)
bind-key -T copy-mode-vi M-c \
  send-keys -X copy-pipe-and-cancel "tmux-yank"

# Key bindings (using M- for Option/Alt, which is cmd in Ghostty with proper config)
# Note: In Ghostty, we'll configure cmd to send Option sequences
# IMPORTANT: Any M- keybindings below must be added to modules/desktop/ghostty.nix

# window (=tmux tab) management 
bind-key -n M-t new-window -c ~ # new window in home directory
bind-key -n M-T new-window -a -c "#{pane_current_path}" # new window in current directory (right after current tab)
bind-key -n 'M-{' previous-window
bind-key -n 'M-}' next-window
bind-key -n M-S-Left swap-window -t -1\; select-window -t -1  # move window left
bind-key -n M-S-Right swap-window -t +1\; select-window -t +1 # move window right

# cmd-1 through cmd-9: select window
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9
